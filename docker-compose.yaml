services:
  postgres_db:
    container_name: postgres-envelope
    image: postgres:latest
    environment:
      POSTGRES_DB: "envelope"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - /2. Init Database:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d envelope" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
    networks:
      backend:

  mongodb:
    container_name: mongodb-envelope
    image: mongo:latest
    restart: always
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    volumes:
      - mongodb-data:/data/db
    networks:
      backend:

  auth-app:
    build:
      context: .
      dockerfile: dockerfiles/auth.Dockerfile
    container_name: auth-app-envelope
    ports:
      - "8001:8000"
    command: "uvicorn --factory application.api.main:create_app --reload --host 0.0.0.0 --port 8000"
    env_file:
      - auth/src/.env
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: envelope
    networks:
      backend:
    depends_on:
      postgres_db:
        condition: service_healthy

  main-app:
    build:
      context: .
      dockerfile: dockerfiles/app.Dockerfile
    container_name: main-app-envelope
    ports:
      - "8000:8000"
    command: "uvicorn --factory application.api.main:create_app --reload --host 0.0.0.0 --port 8000"
    env_file:
      - app/src/.env
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: envelope
      HOST_SERVER: "${HOST_SERVER}"
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
    volumes:
      - ./app/src/:/src/
    networks:
      backend:
    depends_on:
      postgres_db:
        condition: service_healthy
      mongodb:
        condition: service_started

volumes:
  postgres-data:
  mongodb-data:

networks:
  backend:
    driver: bridge